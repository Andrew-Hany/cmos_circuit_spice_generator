{"version":3,"sources":["components/input.jsx","App.js","reportWebVitals.js","index.js"],"names":["review","state","login","className","type","onChange","e","props","inputText","target","value","class","placeholder","onClick","parsing","input","this","output","map","name","drain","gate","source","body","Component","App","inputs","text","outputs","setState","empty","res","split","variable","i","length","result","console","log","counter","replace","k","j","converted","counterC","l","convertedS","join","blockS","c","p","D","S","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34b6b898.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class review extends Component {\n    state = {\n        login: false,\n    }\n\n\n    render() {\n\n        return (\n\n            <div className=\"container\">\n                <br />\n                <br /> <br /> <br /> <br />\n                <textarea type=\"text\" onChange={(e) => this.props.inputText(e.target.value)} class=\"form-control\" placeholder=\"input\" />\n                < button className=\"bg-success rounded col-2  p-2\" onClick={() => this.props.parsing(this.props.input)}>run</button>\n\n                <div className=\"row\">\n                    <div class=\"col-6\">\n                        <table>\n                            <tr>\n                                <th>name</th>\n                                <th>drain</th>\n                                <th>gate</th>\n                                <th>source</th>\n                                <th>body </th>\n                                <th>type </th>\n                            </tr>\n                            {this.props.output.map(output => {\n                                return (\n                                    <tr>\n                                        <td> {output.name}</td>\n                                        <td>  {output.drain} </td>\n                                        <td>   {output.gate}  </td>\n                                        <td>   {output.source}  </td>\n                                        <td>   {output.body}  </td>\n                                        <td>   {output.type} </td>\n                                    </tr>\n                                )\n\n                            })}\n                        </table>\n                    </div >\n\n\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    {/* <b > */}\n\n\n                </div >\n\n            </div >\n        )\n    }\n\n}","\nimport React, { Component } from 'react';\nimport './App.css';\nimport IN from './components/input';\nimport { ConsoleWriter } from 'istanbul-lib-report';\nclass App extends Component {\n  state = {\n    input: \"\",\n    inputs: [{ output: \"\", text: \"\" }],\n    outputs: [\n      { name: \"\", drain: \"\", gate: \"\", source: \"\", body: \"\", type: \"\" }\n    ],\n\n    inputs: [{ output: \"\", text: \"\" }],\n  };\n  inputText = (e) => {\n    this.setState({ input: e })\n  }\n  parsing = (input) => {\n    var empty = [];\n    this.setState(this.state.inputs = empty)\n    this.setState(this.state.outputs = empty)\n    var res = input.split(\";\");\n    const variable = [...this.state.inputs]\n    const outputs = [...this.state.outputs]\n\n\n    //------------dividing the inputs by ';'\n    for (var i = 0; i < res.length - 1; i++) {\n      var result = res[i].split(\"=\");\n      variable[i] = { output: result[0], text: result[1] }\n    }\n\n    this.setState(this.state.inputs = variable)\n    console.log(this.state.inputs);\n\n    // //-------------parsing the inputs\"\n    var counter = 0;\n\n    for (var i = 0; i < variable.length; i++) {\n      // console.log(variable[i].text.length)\n\n      input = variable[i].text + \"|\";\n      input = variable[i].text.replace(\";\", \"\")\n      var res = input.split(\"|\");\n      /*\nx|y;\nz&s;\n      */\n      //then we loop over these res\n      // compute these expressions which are in parrellel \n      for (var k = 0; k < res.length; k++) {\n        console.log(res[0].length + \" \" + res[0])\n        for (var j = 0; j < res[k].length; j++) {\n          if (res[k][j] != \"|\" && res[k][j] != \"&\" && res[k][j] != \"`\" && res[k][j] != \"\\n\") {\n            if (j == 0) {\n              if (j != res[k].length - 1 && (j != res[k].length - 2))\n                outputs[counter] = { name: \"M\" + counter, drain: \"N\" + counter, gate: res[k][j + 1] == \"`\" ? res[k][j] : \"~\" + res[k][j], source: \"vdd\", body: \"vdd\", type: \"pmos\" }\n              else\n                outputs[counter] = { name: \"M\" + counter, drain: variable[i].output, gate: res[k][j + 1] == \"`\" ? res[k][j] : \"~\" + res[k][j], source: \"vdd\", body: \"vdd\", type: \"pmos\" }\n              counter++;\n            }\n            else if (j == res[k].length - 1 || (j == res[k].length - 2)) {\n              outputs[counter] = { name: \"M\" + counter, drain: variable[i].output, gate: res[k][j + 1] == \"`\" ? res[k][j] : \"~\" + res[k][j], source: outputs[counter - 1].drain, body: outputs[counter - 1].drain, type: \"pmos\" }\n              counter++;\n            }\n            else {\n              outputs[counter] = { name: \"M\" + counter, drain: \"N\" + counter, gate: res[k][j + 1] == \"`\" ? res[k][j] : \"~\" + res[k][j], source: outputs[counter - 1].drain, body: outputs[counter - 1].drain, type: \"pmos\" }\n              counter++;\n            }\n          }\n        }\n      }\n      //------------------------PDU-------------------------------------------------------------------------------\n      //--convert--------------------//\n      input = variable[i].text + \"|\";\n      var converted = [];\n      var counterC = 0;\n\n      //A|B|C'\n      //C\n      for (var l = 0; l < input.length; l++) {\n\n        if (input[l] == \"|\") {\n          converted[counterC] = \"&\";\n          counterC++;\n        }\n        else if (input[l] == \"&\") {\n          converted[counterC] = \"|\";\n          counterC++;\n        }\n        else if (input[l] != \"|\" && input[l] != \"&\" && input[l] != \"`\") {\n          if (input[l + 1] == \"`\") {\n            converted[counterC] = input[l]\n            counterC++;\n          }\n          else {\n            converted[counterC] = input[l]\n            counterC++;\n            converted[counterC] = \"`\";\n            counterC++;\n\n          }\n        }\n\n      }\n      //------------------converted----------------------\n      var convertedS = converted.join(\"\");\n\n      var res = convertedS.split(\"&\");\n\n      console.log(res);\n      console.log(\"asda\" + \" \" + convertedS);\n      var blockS = [];\n\n\n      for (var c = 0; c < res.length - 1; c++) {\n        for (var p = 0; p < res[c].length; p++) {\n\n          if (res[c][p] != \"|\" && res[c][p] != \"&\" && res[c][p] != \"`\" && res[c][p] != \"\\n\") {\n            console.log(res[1].length - 2 + res[c]);\n            if (c == 0 && c == res.length - 2) {\n              outputs[counter] = { name: \"M\" + counter, drain: variable[i].output, gate: res[c][p + 1] == \"`\" ? \"~\" + res[c][p] : res[c][p], source: 0, body: 0, type: \"nmos\" }\n              counter++;\n\n            }\n            else {\n              if (c == 0)\n                var D = variable[i].output;\n              else\n                var D = blockS[c - 1]\n              // var D = outputs[counter - 1].source;\n\n              var S;\n              if (c == res.length - 2)\n                S = 0;\n              else { S = \"N\" + counter; blockS[c] = S }\n\n              outputs[counter] = { name: \"M\" + counter, drain: D, gate: res[c][p + 1] == \"`\" ? \"~\" + res[c][p] : res[c][p], source: S, body: S, type: \"nmos\" }\n              counter++;\n            }\n\n\n          }\n        }\n\n      }\n\n    }\n\n    this.setState(this.state.outputs = outputs)\n    this.setState(this.state.inputs = variable)\n    console.log(this.state.inputs);\n    console.log(this.state.outputs);\n  }\n\n\n  render() {\n\n    return (\n\n      <div  >\n\n        <IN\n          input={this.state.input}\n          parsing={this.parsing}\n          inputText={this.inputText}\n          output={this.state.outputs}\n\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}