[{"/Users/aucuser/Desktop/cmos_circuit_spice_generator/src/index.js":"1","/Users/aucuser/Desktop/cmos_circuit_spice_generator/src/reportWebVitals.js":"2","/Users/aucuser/Desktop/cmos_circuit_spice_generator/src/App.js":"3","/Users/aucuser/Desktop/cmos_circuit_spice_generator/src/components/input.jsx":"4"},{"size":500,"mtime":1607241055613,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1607241055623,"results":"7","hashOfConfig":"6"},{"size":5452,"mtime":1607517130832,"results":"8","hashOfConfig":"6"},{"size":1932,"mtime":1607516881102,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"17iadr3",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aucuser/Desktop/cmos_circuit_spice_generator/src/index.js",[],["20","21"],"/Users/aucuser/Desktop/cmos_circuit_spice_generator/src/reportWebVitals.js",[],"/Users/aucuser/Desktop/cmos_circuit_spice_generator/src/App.js",["22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62"],"\nimport React, { Component } from 'react';\nimport './App.css';\nimport IN from './components/input';\nimport { ConsoleWriter } from 'istanbul-lib-report';\nclass App extends Component {\n  state = {\n    input: \"\",\n    inputs: [{ output: \"\", text: \"\" }],\n    outputs: [\n      { name: \"\", drain: \"\", gate: \"\", source: \"\", body: \"\", type: \"\" }\n    ],\n\n    inputs: [{ output: \"\", text: \"\" }],\n  };\n  inputText = (e) => {\n    this.setState({ input: e })\n  }\n  parsing = (input) => {\n    var empty = [];\n    this.setState(this.state.inputs = empty)\n    this.setState(this.state.outputs = empty)\n    var res = input.split(\";\");\n    const variable = [...this.state.inputs]\n    const outputs = [...this.state.outputs]\n\n\n    //------------dividing the inputs by ';'\n    for (var i = 0; i < res.length - 1; i++) {\n      var result = res[i].split(\"=\");\n      variable[i] = { output: result[0], text: result[1] }\n    }\n\n    this.setState(this.state.inputs = variable)\n    console.log(this.state.inputs);\n\n    // //-------------parsing the inputs\"\n    var counter = 0;\n\n    for (var i = 0; i < variable.length; i++) {\n      // console.log(variable[i].text.length)\n\n      input = variable[i].text + \"|\";\n      input = variable[i].text.replace(\";\", \"\")\n      var res = input.split(\"|\");\n      /*\nx|y;\nz&s;\n      */\n      //then we loop over these res\n      // compute these expressions which are in parrellel \n      for (var k = 0; k < res.length; k++) {\n        console.log(res[0].length + \" \" + res[0])\n        for (var j = 0; j < res[k].length; j++) {\n          if (res[k][j] != \"|\" && res[k][j] != \"&\" && res[k][j] != \"`\" && res[k][j] != \"\\n\") {\n            if (j == 0) {\n              if (j != res[k].length - 1 && (j != res[k].length - 2))\n                outputs[counter] = { name: \"M\" + counter, drain: \"N\" + counter, gate: res[k][j + 1] == \"`\" ? res[k][j] : \"~\" + res[k][j], source: \"vdd\", body: \"vdd\", type: \"pmos\" }\n              else\n                outputs[counter] = { name: \"M\" + counter, drain: variable[i].output, gate: res[k][j + 1] == \"`\" ? res[k][j] : \"~\" + res[k][j], source: \"vdd\", body: \"vdd\", type: \"pmos\" }\n              counter++;\n            }\n            else if (j == res[k].length - 1 || (j == res[k].length - 2)) {\n              outputs[counter] = { name: \"M\" + counter, drain: variable[i].output, gate: res[k][j + 1] == \"`\" ? res[k][j] : \"~\" + res[k][j], source: outputs[counter - 1].drain, body: outputs[counter - 1].drain, type: \"pmos\" }\n              counter++;\n            }\n            else {\n              outputs[counter] = { name: \"M\" + counter, drain: \"N\" + counter, gate: res[k][j + 1] == \"`\" ? res[k][j] : \"~\" + res[k][j], source: outputs[counter - 1].drain, body: outputs[counter - 1].drain, type: \"pmos\" }\n              counter++;\n            }\n          }\n        }\n      }\n      //------------------------PDU-------------------------------------------------------------------------------\n      //--convert--------------------//\n      input = variable[i].text + \"|\";\n      var converted = [];\n      var counterC = 0;\n\n      //A|B|C'\n      //C\n      for (var l = 0; l < input.length; l++) {\n\n        if (input[l] == \"|\") {\n          converted[counterC] = \"&\";\n          counterC++;\n        }\n        else if (input[l] == \"&\") {\n          converted[counterC] = \"|\";\n          counterC++;\n        }\n        else if (input[l] != \"|\" && input[l] != \"&\" && input[l] != \"`\") {\n          if (input[l + 1] == \"`\") {\n            converted[counterC] = input[l]\n            counterC++;\n          }\n          else {\n            converted[counterC] = input[l]\n            counterC++;\n            converted[counterC] = \"`\";\n            counterC++;\n\n          }\n        }\n\n      }\n      //------------------converted----------------------\n      var convertedS = converted.join(\"\");\n\n      var res = convertedS.split(\"&\");\n\n      console.log(res);\n      console.log(\"asda\" + \" \" + convertedS);\n      var blockS = [];\n\n\n      for (var c = 0; c < res.length - 1; c++) {\n        for (var p = 0; p < res[c].length; p++) {\n\n          if (res[c][p] != \"|\" && res[c][p] != \"&\" && res[c][p] != \"`\" && res[c][p] != \"\\n\") {\n            console.log(res[1].length - 2 + res[c]);\n            if (c == 0 && c == res.length - 2) {\n              outputs[counter] = { name: \"M\" + counter, drain: variable[i].output, gate: res[c][p + 1] == \"`\" ? \"~\" + res[c][p] : res[c][p], source: 0, body: 0, type: \"nmos\" }\n              counter++;\n\n            }\n            else {\n              if (c == 0)\n                var D = variable[i].output;\n              else\n                var D = blockS[c - 1]\n              // var D = outputs[counter - 1].source;\n\n              var S;\n              if (c == res.length - 2)\n                S = 0;\n              else { S = \"N\" + counter; blockS[c] = S }\n\n              outputs[counter] = { name: \"M\" + counter, drain: D, gate: res[c][p + 1] == \"`\" ? \"~\" + res[c][p] : res[c][p], source: S, body: S, type: \"nmos\" }\n              counter++;\n            }\n\n\n          }\n        }\n\n      }\n\n    }\n\n    this.setState(this.state.outputs = outputs)\n    this.setState(this.state.inputs = variable)\n    console.log(this.state.inputs);\n    console.log(this.state.outputs);\n  }\n\n\n  render() {\n\n    return (\n\n      <div  >\n\n        <IN\n          input={this.state.input}\n          parsing={this.parsing}\n          inputText={this.inputText}\n          output={this.state.outputs}\n\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","/Users/aucuser/Desktop/cmos_circuit_spice_generator/src/components/input.jsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":14,"column":5,"nodeType":"73","messageId":"74","endLine":14,"endColumn":11},{"ruleId":"75","severity":1,"message":"76","line":21,"column":19,"nodeType":"77","endLine":21,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":22,"column":19,"nodeType":"77","endLine":22,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":34,"column":19,"nodeType":"77","endLine":34,"endColumn":29},{"ruleId":"78","severity":1,"message":"79","line":40,"column":14,"nodeType":"69","messageId":"80","endLine":40,"endColumn":15},{"ruleId":"78","severity":1,"message":"81","line":45,"column":11,"nodeType":"69","messageId":"80","endLine":45,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":55,"column":25,"nodeType":"84","messageId":"74","endLine":55,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":55,"column":45,"nodeType":"84","messageId":"74","endLine":55,"endColumn":47},{"ruleId":"82","severity":1,"message":"83","line":55,"column":65,"nodeType":"84","messageId":"74","endLine":55,"endColumn":67},{"ruleId":"82","severity":1,"message":"83","line":55,"column":85,"nodeType":"84","messageId":"74","endLine":55,"endColumn":87},{"ruleId":"82","severity":1,"message":"85","line":56,"column":19,"nodeType":"84","messageId":"74","endLine":56,"endColumn":21},{"ruleId":"82","severity":1,"message":"83","line":57,"column":21,"nodeType":"84","messageId":"74","endLine":57,"endColumn":23},{"ruleId":"82","severity":1,"message":"83","line":57,"column":48,"nodeType":"84","messageId":"74","endLine":57,"endColumn":50},{"ruleId":"82","severity":1,"message":"85","line":58,"column":101,"nodeType":"84","messageId":"74","endLine":58,"endColumn":103},{"ruleId":"82","severity":1,"message":"85","line":60,"column":106,"nodeType":"84","messageId":"74","endLine":60,"endColumn":108},{"ruleId":"82","severity":1,"message":"85","line":63,"column":24,"nodeType":"84","messageId":"74","endLine":63,"endColumn":26},{"ruleId":"82","severity":1,"message":"85","line":63,"column":51,"nodeType":"84","messageId":"74","endLine":63,"endColumn":53},{"ruleId":"82","severity":1,"message":"85","line":64,"column":104,"nodeType":"84","messageId":"74","endLine":64,"endColumn":106},{"ruleId":"82","severity":1,"message":"85","line":68,"column":99,"nodeType":"84","messageId":"74","endLine":68,"endColumn":101},{"ruleId":"82","severity":1,"message":"85","line":84,"column":22,"nodeType":"84","messageId":"74","endLine":84,"endColumn":24},{"ruleId":"82","severity":1,"message":"85","line":88,"column":27,"nodeType":"84","messageId":"74","endLine":88,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":92,"column":27,"nodeType":"84","messageId":"74","endLine":92,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":92,"column":46,"nodeType":"84","messageId":"74","endLine":92,"endColumn":48},{"ruleId":"82","severity":1,"message":"83","line":92,"column":65,"nodeType":"84","messageId":"74","endLine":92,"endColumn":67},{"ruleId":"82","severity":1,"message":"85","line":93,"column":28,"nodeType":"84","messageId":"74","endLine":93,"endColumn":30},{"ruleId":"78","severity":1,"message":"81","line":110,"column":11,"nodeType":"69","messageId":"80","endLine":110,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":113,"column":26,"nodeType":"84","messageId":"88","endLine":113,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":120,"column":25,"nodeType":"84","messageId":"74","endLine":120,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":120,"column":45,"nodeType":"84","messageId":"74","endLine":120,"endColumn":47},{"ruleId":"82","severity":1,"message":"83","line":120,"column":65,"nodeType":"84","messageId":"74","endLine":120,"endColumn":67},{"ruleId":"82","severity":1,"message":"83","line":120,"column":85,"nodeType":"84","messageId":"74","endLine":120,"endColumn":87},{"ruleId":"82","severity":1,"message":"85","line":122,"column":19,"nodeType":"84","messageId":"74","endLine":122,"endColumn":21},{"ruleId":"82","severity":1,"message":"85","line":122,"column":29,"nodeType":"84","messageId":"74","endLine":122,"endColumn":31},{"ruleId":"82","severity":1,"message":"85","line":123,"column":104,"nodeType":"84","messageId":"74","endLine":123,"endColumn":106},{"ruleId":"82","severity":1,"message":"85","line":128,"column":21,"nodeType":"84","messageId":"74","endLine":128,"endColumn":23},{"ruleId":"78","severity":1,"message":"89","line":131,"column":21,"nodeType":"69","messageId":"80","endLine":131,"endColumn":22},{"ruleId":"82","severity":1,"message":"85","line":135,"column":21,"nodeType":"84","messageId":"74","endLine":135,"endColumn":23},{"ruleId":"82","severity":1,"message":"85","line":139,"column":87,"nodeType":"84","messageId":"74","endLine":139,"endColumn":89},{"ruleId":"75","severity":1,"message":"76","line":151,"column":19,"nodeType":"77","endLine":151,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":152,"column":19,"nodeType":"77","endLine":152,"endColumn":29},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'ConsoleWriter' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'inputs'.","ObjectExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-redeclare","'i' is already defined.","redeclared","'res' is already defined.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","Expected '===' and instead saw '=='.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'D' is already defined.","no-global-assign","no-unsafe-negation"]